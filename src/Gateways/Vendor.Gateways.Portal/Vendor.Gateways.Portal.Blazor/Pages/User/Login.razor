@page "/Login"
@using Microsoft.AspNetCore.Components
@using Vendor.Gateways.Portal.DTO
@using Vendor.Gateways.Portal.Providers
@using Vendor.Gateways.Portal.Services.Authentication

@inject IAuthenticationService _authenticationService;
@inject NavigationManager _navManager;
@inject TokenAuthenticationStateProvider _stateProvider;

<section class="vh-100">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-black" style="border-radius: 25px;">
                    <div class="card-body p-md-5">
                        <div class="row justify-content-center">
                            <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign in</p>

                                <EditForm Context="LoginContext" Model="@DataModel" OnValidSubmit="@HandleFormSubmitAsync" class="mx-1 mx-md-4">

                                    <DataAnnotationsValidator/>
                                    <ValidationSummary/>

                                    <ul class="validation-errors">
                                        @foreach (var error in ValidationErrors)
                                        {
                                            <li class="validation-message">@error</li>
                                        }
                                    </ul>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <InputText @bind-Value="DataModel.Username" type="text" id="form3Example1c" class="form-control"/>
                                            <label class="form-label" for="form3Example1c">Username</label>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <InputText @bind-Value="DataModel.Password" type="password" id="form3Example4c" class="form-control"/>
                                            <label class="form-label" for="form3Example4c">Password</label>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                                        <button type="submit" class="btn btn-primary btn-lg">Login</button>
                                    </div>

                                </EditForm>

                            </div>
                            <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                                     class="img-fluid" alt="Sample image">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private LoginUserFormData DataModel = new LoginUserFormData();
    private List<string> ValidationErrors = new List<string>();

    private async void HandleFormSubmitAsync()
    {
        var loginResult = await _authenticationService.LoginAsync(DataModel);
        if (loginResult.IsSuccessful && loginResult.Result!.IsValid)
        {
            var token = loginResult.Result.Result;
            await _stateProvider.SetAuthenticationStateAsync(token);
            _navManager.NavigateTo("/", true);
            return;
        }
        
        ValidationErrors.Add("An error occured while trying to log you in!");
        StateHasChanged();
    }

}