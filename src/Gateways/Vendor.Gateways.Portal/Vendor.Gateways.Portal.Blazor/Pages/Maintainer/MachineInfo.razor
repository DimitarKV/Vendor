@page "/Maintainer/MachineInfo/{id:int}"
@using Vendor.Domain.Views
@using Vendor.Gateways.Portal.Services.Maintainer
@using Vendor.Gateways.Portal.Services.Product
@inject IJSRuntime JsRuntime
@inject NavigationManager UriHelper
@inject IMaintainerService MaintainerService;
@inject IProductService ProductService;

@* <h1>@MachineId</h1> *@

<div class="container mt-5">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-10 col-lg-8">
            <div class="card">

                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" id="myTab">
                            <li class="nav-item">
                                <a href="#status" class="nav-link active" data-toggle="tab">Status</a>
                            </li>
                            <li class="nav-item">
                                <a href="#location" class="nav-link" data-toggle="tab">Location</a>
                            </li>
                            <li class="nav-item">
                                <a href="#statistics" class="nav-link" data-toggle="tab">Statistics</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content">
                            <div class="tab-pane fade vh-50 active show parent" style="height: 50vh" id="status">
                                <h5 class="card-title">Active</h5>
                                <p class="card-text">The machine has @(_vendingView.Money)лв.</p>
                                <p class="card-text">The machine is out of @String.Join(", ", _unavailableProducts.Select(p => p.Name)).</p>
                                <p class="card-text">@_emptySpiralsCount spirals are currently empty.</p>
                                <h3>Machine last serviced by: </h3>
                                <div class="fill-empty-space">
                                    @* TODO Imortant!!! User this format for the date *@
                                    John[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Coke, Sprite, Doritos<br/>
                                    Sarah[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Pepsi, Fritos, Snickers<br/>
                                    Michael[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Sprite, Lays, Twix<br/>
                                    Emily[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Mountain Dew, Cheetos, M&Ms<br/>
                                    Alex[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Pepsi, Fanta, Popcorn<br/>
                                    Rachel[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled 7UP, Nachos, KitKat<br/>
                                    David[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Dr. Pepper, Ruffles, Hershey's<br/>
                                    Laura[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Coke, Pringles, Skittles<br/>
                                    Jason[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Sprite, SunChips, Reeses<br/>
                                    Samantha[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Pepsi, Tostitos, Snickers<br/>
                                    Kevin[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Mountain Dew, Cheetos, Milky Way<br/>
                                    Lily[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled 7UP, Pringles, Twizzlers<br/>
                                    Ethan[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Dr. Pepper, Ruffles, Skittles<br/>
                                    Olivia[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Coke, SunChips, M&Ms<br/>
                                    William[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Pepsi, Fritos, Snickers<br/>
                                    Ava[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Sprite, Lays, Hershey's<br/>
                                    Daniel[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Mountain Dew, Nachos, KitKat<br/>
                                    Mia[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled 7UP, Tostitos, Twix<br/>
                                    Benjamin[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Dr. Pepper, Popcorn, Reeses<br/>
                                    Emma[@DateTime.Now.AddDays(-Random.Shared.Next(15)).ToString("dd/MM/yy hh:mm")] - Filled Coke, Fanta, Skittles<br/>
                                </div>
                            </div>
                            <div class="tab-pane fade vh-50" style="height: 50vh" id="location">
                                <div id="map" style="height: 100%;"></div>
                            </div>
                            <div class="tab-pane fade" style="height: 50vh" id="statistics">
                                <h5 class="card-title">Messages tab content</h5>
                                <p class="card-text">Here is some example text to make up the tab's content. Replace it with your own text anytime.</p>
                                <a href="#" class="btn btn-primary">Go somewhere</a>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-12 col-sm-12 col-md-2 col-lg-4">
            <img src="@_vendingView.ImageUrl" style="width: 100%; height: 100%; object-fit: cover; object-position: 50% 50%" alt="Machine"/>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public int Id { get; set; }

    private IJSObjectReference? module;

    private VendingView _vendingView;
    private List<ProductView> _unavailableProducts = new();
    private int _emptySpiralsCount = 0;

    protected async override Task OnInitializedAsync()
    {
        _vendingView = new();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var queryMachineResponse = await MaintainerService.FetchMachineById(Id);
            if (queryMachineResponse.IsValid)
                _vendingView = queryMachineResponse.Result;
            
            
            var missingProductsResponse = await MaintainerService.QueryMissingProducts(Id);
            if (missingProductsResponse.IsValid)
            {
                foreach (var productId in missingProductsResponse.Result)
                {
                    var productResponse = await ProductService.GetProductByIdAsync(productId);
                    if (productResponse.IsValid)
                    {
                        _unavailableProducts.Add(productResponse.Result);
                    }
                }
            }

            _emptySpiralsCount = _vendingView.Spirals.Count(s => s.Loads == 0);


            module = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Maintainer/MachineInfo.razor.js");
            await module.InvokeVoidAsync("initMap", _vendingView.Latitude, _vendingView.Longitude, _vendingView.Title);
            StateHasChanged();
        }
    }

}