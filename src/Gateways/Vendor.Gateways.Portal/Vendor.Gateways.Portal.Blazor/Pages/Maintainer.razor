@page "/Maintainer"
@using Vendor.Domain.Views
@using Vendor.Gateways.Portal.Services.Maintainer

@inject IMaintainerService _service

<div class="container h-70 mt-5">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-lg-8 col-xl-10">
            <div class="card text-light" style="border-radius: 25px; border-color: black; background-color: rgba(0,0,0,0.2)">
                <div class="card-body p-md-5">
                    <div class="text-center">
                        <h2>Serviceable machines</h2>
                    </div>
                    <div class="row justify-content-center">
                        @* <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1"> *@


                        @if (_vendingViews.Count == 0)
                        {
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading machines, please wait!</span>
                            </div>
                        }
                        else
                        {
                            @foreach (var view in _vendingViews)
                            {
                                <VendingViewPartial Machine="@view"></VendingViewPartial>
                            }
                        }
                        @* </div> *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<VendingView> _vendingViews = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_vendingViews.Count == 0 || firstRender)
            await PopulateVendingViews();
    }

    private async Task PopulateVendingViews()
    {
        var response = await _service.FetchEmptyMachines();
        if (response.IsSuccessful)
            _vendingViews = response.Result!.Result;
        StateHasChanged();
    }

}