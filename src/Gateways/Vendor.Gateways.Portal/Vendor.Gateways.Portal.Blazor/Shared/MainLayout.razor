@using Vendor.Gateways.Portal.Providers
@using Vendor.Gateways.Portal.Extensions
@inherits LayoutComponentBase
@inject TokenAuthenticationStateProvider _stateProvider
@inject NavigationManager _navManager;
@inject IJSRuntime JS

<nav class="navbar custom-navbar navbar-expand-lg navbar-dark" data-spy="affix" data-offset-top="20">
    <div class="container">
        <a class="navbar-brand" href="/">
            <img class="nav-logo" src="/images/logo.png" alt="LOGO"/>
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse rounded" id="navbarSupportedContent">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>

                <AuthorizeView Roles="@($"Admin")">
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/panel">Admin</a>
                        </li>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="@($"Admin, Manager")">
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link" href="/manager/panel">Manager</a>
                        </li>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="@($"Admin, Maintainer, Manager")">
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link" href="/product/register">Product</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/maintainer/empty">Service</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/maintainer/create">Machine</a>
                        </li>
                    </Authorized>
                </AuthorizeView>

                <li class="nav-item">
                    <a class="nav-link" href="/aboutus">About us</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/contactus">Contact us</a>
                </li>

                <AuthorizeView>
                    <NotAuthorized>
                        <li class="nav-item">
                            <a class="nav-link btn btn-primary rounded w-sm btn-lg my-1" href="/register">Sign up</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link btn btn-primary rounded w-sm btn-lg my-1" href="/login">Sign in</a>
                        </li>
                    </NotAuthorized>
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link btn btn-primary rounded w-sm btn-lg my-1" @onclick="HandleLogoutAsync">Log out</a>
                        </li>
                    </Authorized>
                </AuthorizeView>


            </ul>
        </div>
    </div>
</nav>

@Body

@code
{
    private IJSObjectReference? module;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./Shared/MainLayout.razor.js");
    }

    private async Task HandleLogoutAsync()
    {
        if ((await _stateProvider.GetAuthenticationStateAsync()).User.IsAuthenticated())
        {
            await _stateProvider.SetAuthenticationStateAsync(null);
            _navManager.NavigateTo("/", true);
        }
    }
}